#!/usr/bin/env python
import yaml
import sys
from subprocess import call 
import os
from os import walk

ESROCOS_YAML = "esrocos.yml"
ROOT_DIR = os.environ['AUTOPROJ_CURRENT_ROOT']
LINKINGS_YAML = "linkings.yml"

project_name = ""

# READ ESROCOS YAML

print "read esrocos.yml...",

data = []

try:
  with open(ESROCOS_YAML, 'r') as infile:

    data = yaml.load(infile)
    project_name = data["PROJECT_NAME"]
    SRC_DIR = data["ASNACN_DIR"]
    INSTALLED_TYPES_DIR = data["INSTALLED_TYPES_DIR"]
  
except IOError:
  print "could not read esrocos.yml, aborting..."
  sys.exit()
except KeyError:
  print "error parsing esrocos.yml, aborting..."
  sys.exit()

print "DONE"

#CONFIGURE ORCHESTRATOR_OPTIONS
linkings = {}
orchestrator_options = ""

# open link_library yml file

try:
  with open(LINKINGS_YAML, 'r') as infile:
  
    data = yaml.load(infile)

    for partition in data:
      libs = data[partition]
      linkings[partition] = " --with-extra-lib "+partition+":"       
      
      first = True  
      for lib in libs:
        if not first:
          linkings[partition] += ","
        else: 
          first = False
            
        linkings[partition] += lib
          
except IOError:
  print "could not read linkings.yml in "+LINKINGS_YAML+", aborting..."
  sys.exit()
except KeyError:
  print "could not read linkings.yml in "+LINKINGS_YAML+", aborting..."
  sys.exit()

print "DONE"

for entry in linkings:
  orchestrator_options += linkings[entry]  

deployment_view = project_name+'_dp.aadl'

if not 'ORCHESTRATOR_OPTIONS' in os.environ:
  os.environ["ORCHESTRATOR_OPTIONS"] = "" 

os.environ["ORCHESTRATOR_OPTIONS"] += orchestrator_options
os.environ["ORCHESTRATOR_OPTIONS"] += " --no-retry"

os.environ["DEPLOYMENTVIEW"] = deployment_view

# RUN BUILD SCRIPT

taste_arguments = ["./build-script.sh"]

call(taste_arguments)

